<configuration>
	<components>

		<!--  Adds the AboutNodeProvider to the TreeServiceShell -->
		<partial-component id="TreeServiceShell">
			<parameters>
				<tasks>
					<list>
						<item insert="last">${SettingNodes.AboutNodeProvider}</item>
					</list>
				</tasks>
			</parameters>
		</partial-component>

		<!-- This is the configuration of the AboutNodeProvider -->
		<!-- Which provides a new node to the Settings section and a root node -->
		<component
				id ="SettingNodes.AboutNodeProvider"
				service="UCommerce.Tree.ITreeContentProvider, UCommerce"
				type="SampleApp.Extensions.UI.Tree.AboutNodeProvider, SampleApp.Extensions" >
			<parameters>
				<nodeName>About</nodeName>
				<supportTypes>
					<list>
						<item>settings</item>
						<item>root</item>
					</list>
				</supportTypes>
			</parameters>
		</component>

		<!-- Adds the AboutTabInSettings pipeline task into the page builder pipeline -->
		<partial-component id="PageBuilder">
			<parameters>
				<tasks>
					<array>
						<item insert="last">${PageBuilder.AboutTabInSettings}</item>
					</array>
				</tasks>
			</parameters>
		</partial-component>

		<!-- Shows how you can control the value of properties on an object through castle windsor config -->
		<component
				id="TabConfiguration"
				service="SampleApp.Extensions.Configuration.TabConfiguration, SampleApp.Extensions"
				type="SampleApp.Extensions.Configuration.TabConfiguration, SampleApp.Extensions">
			<parameters>
				<ShowTab>true</ShowTab>
				<ShowUCommerceVersion>true</ShowUCommerceVersion>
				<ShowShemaVersion>true</ShowShemaVersion>
			</parameters>
		</component>

		<!-- This is the configuration of the AboutTabInSettings example -->
		<!-- This pipeline task that adds a tab to the settings node in the uCommerce backoffice -->
		<component
				id="PageBuilder.AboutTabInSettings"
				service="UCommerce.Pipelines.IPipelineTask`1[[UCommerce.Presentation.UI.SectionGroup, UCommerce.Presentation]], UCommerce"
				type="SampleApp.Extensions.UI.Tab.AboutTabInSettings, SampleApp.Extensions">
			<parameters>
				<!-- Inject a specific configuration of the TabConfiguration by using the component id -->
				<tabConfiguration>${TabConfiguration}</tabConfiguration>
			</parameters>
		</component>

		<!-- Adds ExecuteAddShoeDefinitionPipeline task into the Initialize pipeline -->
		<partial-component id="Initialize">
			<parameters>
				<tasks>
					<array>
						<item insert="last">${Initialize.ExecuteAddShoeDefinitionPipeline}</item>
					</array>
				</tasks>
			</parameters>
		</partial-component>

		<!-- This is the configuration of the task which executes the AddShoeDefintion pipeline -->
		<component id="Initialize.ExecuteAddShoeDefinitionPipeline"
				service="UCommerce.Pipelines.IPipelineTask`1[[UCommerce.Pipelines.Initialization.InitializeArgs, UCommerce.Pipelines]], UCommerce"
				type="SampleApp.Extensions.Pipelines.Initialize.ExecuteAddShoeDefinitionPipelineTask, SampleApp.Extensions">
			<parameters>
				<addShoeDefinitionPipeline>${AddShoeDefinitionPipeline}</addShoeDefinitionPipeline>
			</parameters>
		</component>

		<!-- This is the configuration of the AddShoeDefinition pipeline -->
		<!-- Shows how you can registred the tasks which will be run in a pipeline -->
		<component id="AddShoeDefinitionPipeline"
				service="UCommerce.Pipelines.IPipeline`1[[UCommerce.EntitiesV2.ProductDefinition, UCommerce]], UCommerce"
				type="SampleApp.Extensions.Pipelines.ProductDefinition.AddShoeDefinitionPipeline, SampleApp.Extensions">
			<parameters>
				<tasks>
					<array>
						<value>${ProductDefinition.ModifyShoeDefinitionTask}</value>
						<value>${ProductDefinition.MergeShoeDefinitionTask}</value>
						<value>${ProductDefinition.SaveShoeDefinitionTask}</value>
					</array>
				</tasks>
			</parameters>
		</component>

		<!-- This is the configuration of the pipeline task ModifyShoeDefinitionTask  -->
		<component id="ProductDefinition.ModifyShoeDefinitionTask"
				service="UCommerce.Pipelines.IPipelineTask`1[[UCommerce.EntitiesV2.ProductDefinition, UCommerce]], UCommerce"
				type="SampleApp.Extensions.Pipelines.ProductDefinition.ModifyShoeDefinitionTask, SampleApp.Extensions" />

		<!-- This is the configuration of the pipeline task MergeShoeDefinitionTask  -->
		<component id="ProductDefinition.MergeShoeDefinitionTask"
				service="UCommerce.Pipelines.IPipelineTask`1[[UCommerce.EntitiesV2.ProductDefinition, UCommerce]], UCommerce"
				type="SampleApp.Extensions.Pipelines.ProductDefinition.MergeShoeDefinitionTask, SampleApp.Extensions" >
			<parameters>${SaveDefinition}</parameters>
		</component>

		<!-- This is the configuration of the pipeline task SaveShoeDefinitionTask  -->
		<component id="ProductDefinition.SaveShoeDefinitionTask"
				service="UCommerce.Pipelines.IPipelineTask`1[[UCommerce.EntitiesV2.ProductDefinition, UCommerce]], UCommerce"
				type="SampleApp.Extensions.Pipelines.ProductDefinition.SaveShoeDefinitionTask, SampleApp.Extensions" >
			<parameters>${SaveDefinition}</parameters>
		</component>

		<!-- Adds the AddClientSideButtonToSettingsSearch and the AddServerSideButtonToSettingsSearch into the PageBuilder pipeline -->
		<partial-component id="PageBuilder">
			<parameters>
				<tasks>
					<array>
						<item insert="last">${PageBuilder.AddServerSideButtonToSettingsSearch}</item>
						<item insert="last">${PageBuilder.AddClientSideButtonToSettingsSearch}</item>
					</array>
				</tasks>
			</parameters>
		</partial-component>

		<!-- This is the configuration of the pipeline task AddServerSideButtonToSettingsSearch  -->
		<component id="PageBuilder.AddServerSideButtonToSettingsSearch"
				service="UCommerce.Pipelines.IPipelineTask`1[[UCommerce.Presentation.UI.SectionGroup, UCommerce.Presentation]], UCommerce"
				type="SampleApp.Extensions.UI.Button.AddServerSideButtonToSettingsSearchTask, SampleApp.Extensions" />

		<!-- This is the configuration of the pipeline task AddClientSideButtonToSettingsSearch  -->
		<component id="PageBuilder.AddClientSideButtonToSettingsSearch"
				service="UCommerce.Pipelines.IPipelineTask`1[[UCommerce.Presentation.UI.SectionGroup, UCommerce.Presentation]], UCommerce"
				type="SampleApp.Extensions.UI.Button.AddClientSideButtonToSettingsSearchTask, SampleApp.Extensions">
			<parameters>
				<pathService>${uCommercePathService}</pathService>
			</parameters>
		</component>

	</components>
</configuration>
