<configuration>
	<components>
		<component
			id ="SettingNodes.AboutSectionProvider"
			service="UCommerce.Tree.ITreeContentProvider, UCommerce"
			type="SampleApp.Extensions.UI.Tree.AboutNodeProvider, SampleApp.Extensions" >
			<parameters>
				<nodeName>About</nodeName>
				<supportTypes>
					<list>
						<item>settings</item>
					</list>
				</supportTypes>
			</parameters>
		</component>
		
		<partial-component id="TreeServiceShell">
			<parameters>
				<tasks>
					<list>
						<item insert="last">${SettingNodes.AboutSectionProvider}</item>
					</list>
				</tasks>
			</parameters>
		</partial-component>

		<component
			id="ViewBuilder.AboutTabInSettings"
			service="UCommerce.Pipelines.IPipelineTask`1[[UCommerce.Pipelines.IPipelineArgs`2[[UCommerce.Pipelines.ViewBuilder.ViewBuilderRequest, UCommerce],[UCommerce.Pipelines.ViewBuilder.ViewBuilderResponse, UCommerce]], UCommerce]], UCommerce"
			type="SampleApp.Extensions.UI.Tab.AboutTabInSettings, SampleApp.Extensions">
			<parameters>
				<tabConfiguration>${TabConfiguration}</tabConfiguration>
			</parameters>
		</component>

		<partial-component id="ViewBuilder">
			<parameters>
				<tasks>
					<array>
						<item insert="last">${ViewBuilder.AboutTabInSettings}</item>
					</array>
				</tasks>
			</parameters>
		</partial-component>

		<component
			id="TabConfiguration"
			service="SampleApp.Extensions.Model.TabConfiguration, SampleApp.Extensions"
			type="SampleApp.Extensions.Model.TabConfiguration, SampleApp.Extensions">
			<parameters>
				<ShowTab>true</ShowTab>
				<ShowUCommerceVersion>true</ShowUCommerceVersion>
				<ShowShemaVersion>true</ShowShemaVersion>
			</parameters>
		</component>

		<!-- Pipeline Instance -->
		<component id="AddShoeDefinition"
				   service="UCommerce.Pipelines.IPipeline`1[[UCommerce.EntitiesV2.ProductDefinition, UCommerce]], UCommerce"
				   type="SampleApp.Extensions.Pipelines.Definitions.AddDefinitionPipeline, SampleApp.Extensions">
			<parameters>
				<tasks>
					<array>
						<value>${CreateShoeDefinitionTask}</value>
						<value>${MergeShoeDefinitionTask}</value>
						<value>${AddShoeDefinitionTask}</value>
					</array>
				</tasks>
			</parameters>
		</component>

		<!-- Pipeline Tasks-->
		<component id="CreateShoeDefinitionTask"
							 service="UCommerce.Pipelines.IPipelineTask`1[[UCommerce.EntitiesV2.ProductDefinition, UCommerce]], UCommerce"
							 type="SampleApp.Extensions.Definitions.Product.CreateShoeDefinitionTask, SampleApp.Extensions" />

		<component id="MergeShoeDefinitionTask"
							 service="UCommerce.Pipelines.IPipelineTask`1[[UCommerce.EntitiesV2.ProductDefinition, UCommerce]], UCommerce"
							 type="SampleApp.Extensions.Definitions.Product.MergeShoeDefinitionTask, SampleApp.Extensions" />

		<component id="AddShoeDefinitionTask"
							 service="UCommerce.Pipelines.IPipelineTask`1[[UCommerce.EntitiesV2.ProductDefinition, UCommerce]], UCommerce"
							 type="SampleApp.Extensions.Definitions.Product.AddShoeDefinitionTask, SampleApp.Extensions" />


		<partial-component id="Initialize">
			<parameters>
				<tasks>
					<array>
						<item insert="last">${AddShoeDefinition}</item>
					</array>
				</tasks>
			</parameters>
		</partial-component>
	</components>
</configuration>
